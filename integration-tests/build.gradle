plugins {
    id "docker-compose"
}

ext.projectName = "Transferwise Tasks Executor"
ext.projectDescription = "Transferwise Tasks Executor - Fire and forget until Alert."
ext.projectArtifactName = "tw-tasks-executor"

apply from: '../build.common.gradle'

dependencies {
    implementation project(":tw-tasks-core-spring-boot-starter")
    implementation project(":tw-tasks-incidents-spring-boot-starter")
    implementation project(":tw-tasks-kafka-listener-spring-boot-starter")
    implementation project(":tw-tasks-kafka-publisher-spring-boot-starter")
    implementation project(":tw-tasks-management-spring-boot-starter")
    implementation project(":tw-tasks-jobs-spring-boot-starter")

    testImplementation project(":tw-tasks-core-test")
    testImplementation project(":tw-tasks-kafka-publisher-test")
    testImplementation project(":tw-tasks-jobs-test")

    testImplementation libraries.commonsIo
    testImplementation libraries.twLeaderSelector
    testImplementation libraries.twContext
    testImplementation libraries.springTx
    testImplementation libraries.springBootStarterActuator
    testImplementation libraries.springBootStarterWeb
    testImplementation libraries.springBootStarterJdbc
    testImplementation libraries.springBootStarterTest
    testImplementation libraries.springSecurityConfig
    testImplementation libraries.springSecurityTest
    testImplementation libraries.liquibaseCore
    testImplementation libraries.postgresql
    testImplementation libraries.mariadbJavaClient
    testImplementation libraries.springKafka
    testImplementation libraries.awaitility
}

test {
    systemProperty("spring.profiles.include", System.getProperty("spring.profiles.include"))
}


if (!Boolean.parseBoolean(System.getenv('CI'))) {
    dockerCompose.isRequiredBy(test)
}

ServerSocket ss = new ServerSocket(0)
def freePort = ss.getLocalPort()
ss.close()

dockerCompose {
    useComposeFiles = ["src/test/resources/docker-compose.yml"]
    // Create some flakiness on slower comps
    // waitForTcpPorts = false

    // Set to true if you have anomalies
    stopContainers = true
    removeContainers = true

    environment.put "KAFKA_RANDOM_PORT", "${freePort}"
}
