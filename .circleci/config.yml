version: 2

references:
  container_config: &container_config
    docker:
      - image: docker.tw.ee/circle_openjdk11
        user: circleci
      - image: circleci/mariadb:10.4
        name: mysql1
        command: "mysqld --ssl=0
            --character-set-server=utf8mb4
            --innodb_flush_log_at_trx_commit=0
            --innodb_flush_method=O_DIRECT_NO_FSYNC
            --innodb_flush_neighbors=0
            --character-set-server=utf8mb4
            --collation-server=utf8mb4_unicode_ci
            --transaction-isolation=READ-COMMITTED
            --innodb_autoinc_lock_mode=2"
        environment:
          MYSQL_ROOT_PASSWORD: example-password-change-me
          MYSQL_DATABASE: tw-tasks-test
      - image: circleci/postgres:12
        name: postgres1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example-password-change-me
      - image: bitnami/zookeeper:3.5.5
        name: zk-service1
        environment:
          ALLOW_ANONYMOUS_LOGIN: "yes"
          JVMFLAGS: "-Xmx512m -Xms64m"
      - image: bitnami/zookeeper:3.4.14
        name: zk1
        environment:
          ALLOW_ANONYMOUS_LOGIN: "yes"
          JVMFLAGS: "-Xmx512m -Xms64m"
      - image: wurstmeister/kafka:2.12-2.2.0
        name: kafka1
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: zk1:2181
          KAFKA_LISTENERS: PLAINTEXT://:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_MESSAGE_MAX_BYTES: '10000012'
          KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 20000
          KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "true"
          KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS: 5
    resource_class: medium+
    environment:
      TERM: vt100
      GRADLE_OPTS: "-Dorg.gradle.console=plain -XX:TieredStopAtLevel=1 -server -Djava.security.egd=file:/dev/./urandom -Xmx768m
       -XX:+HeapDumpOnOutOfMemoryError"
      IN_CIRCLE: true
      MARIADB_TCP_3306: 3306
      MARIADB_TCP_HOST: mysql1
      KAFKA_TCP_9092: 9092
      KAFKA_TCP_HOST: kafka1
      ZOOKEEPER_TCP_2181: 2181
      ZOOKEEPER_TCP_HOST: zk-service1
      POSTGRES_TCP_HOST: postgres1
      POSTGRES_TCP_5432: 5432
jobs:
  build:
    <<: *container_config
    steps:
      - checkout
      - restore_cache:
          key: tw-tasks-executor-gradle-v1-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Run tests
          command: ./gradlew --refresh-dependencies clean check -Dspring.profiles.include=circle --console=plain --no-daemon --stacktrace
      - save_cache:
          paths:
            - ~/.gradle/
            - ~/.m2/
          key: tw-tasks-executor-gradle-v1-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - store_test_results:
          path: ./integration-tests/build/test-results/
      - store_test_results:
          path: ./tw-tasks-core/build/test-results/
      - store_test_results:
          path: ./tw-tasks-core-spring-boot-starter/build/test-results/
      - store_test_results:
          path: ./tw-tasks-core-test/build/test-results/
      - store_test_results:
          path: ./tw-tasks-incidents/build/test-results/
      - store_test_results:
          path: ./tw-tasks-incidents-spring-boot-starter/build/test-results/
      - store_test_results:
          path: ./tw-tasks-jobs/build/test-results/
      - store_test_results:
          path: ./tw-tasks-jobs-spring-boot-starter/build/test-results/
      - store_test_results:
          path: ./tw-tasks-jobs-test/build/test-results/
      - store_test_results:
          path: ./tw-tasks-kafka-listener/build/test-results/
      - store_test_results:
          path: ./tw-tasks-kafka-listener-spring-boot-starter/build/test-results/
      - store_test_results:
          path: ./tw-tasks-management/build/test-results/
      - store_test_results:
          path: ./tw-tasks-management-spring-boot-starter/build/test-results/
      - run:
          name: gather reports
          command: |
            tar -zcvf ~/reports.tar.gz $( find . -type f -regex '.*/build/reports/.*' )
          when: always
      - store_artifacts:
          path: ~/reports.tar.gz
          target: reports
          when: always

  artifacts-publish:
    <<: *container_config
    resource_class: small
    steps:
      - checkout
      - restore_cache:
          key: tw-tasks-executor-gradle-v1-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Set git config
          command: |
            mkdir -p ~/.ssh
            rm -rf ~/.ssh/*
            ssh-keyscan github.com >> ~/.ssh/known_hosts
            git config --global user.name "TransferWise CircleCI" && git config --global user.email circle@circle.tw.ee
      - run:
          name: Publish artifacts
          command: |
            if ./.circleci/version-changed.sh tw-tasks-core ; then
              ./gradlew pushTag publish --no-daemon --console=plain
            fi

workflows:
  version: 2
  build_and_publish:
    jobs:
      - build
      - artifacts-publish:
          context: artifactory-deploy
          requires:
            - build
          filters:
            branches:
              only:
                - master