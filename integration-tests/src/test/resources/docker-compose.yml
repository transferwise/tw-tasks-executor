version: '3.7'

services:
  zookeeper:
    image: bitnami/zookeeper:3.5.5
    ports:
      - "2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      JVMFLAGS: -server -Xms25m -Xmx512m -XX:+UseG1GC -Djava.awt.headless=true -XX:MaxMetaspaceExpansion=2M -XX:+TieredCompilation -XX:+HeapDumpOnOutOfMemoryError -XX:GCHeapFreeLimit=5 -XX:GCTimeLimit=90 -noverify -XX:ReservedCodeCacheSize=256m -Djava.security.egd=file:/dev/./urandom -Dcom.sun.xml.internal.bind.v2.runtime.JAXBContextImpl.fastBoot=true -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -Dcom.sun.xml.internal.bind.v2.bytecode.ClassTailor.noOptimize=true -XX:SoftRefLRUPolicyMSPerMB=5 -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses
  kafka-zk:
    image: bitnami/zookeeper:3.4.14
    hostname: kafka-zk
    ports:
      - "2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      JVMFLAGS: -server -Xms25m -Xmx512m -XX:+UseG1GC -Djava.awt.headless=true -XX:MaxMetaspaceExpansion=2M -XX:+TieredCompilation -XX:+HeapDumpOnOutOfMemoryError -XX:GCHeapFreeLimit=5 -XX:GCTimeLimit=90 -noverify -XX:ReservedCodeCacheSize=256m -Djava.security.egd=file:/dev/./urandom -Dcom.sun.xml.internal.bind.v2.runtime.JAXBContextImpl.fastBoot=true -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -Dcom.sun.xml.internal.bind.v2.bytecode.ClassTailor.noOptimize=true -XX:SoftRefLRUPolicyMSPerMB=5 -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses
  kafka:
    image: wurstmeister/kafka:2.12-2.4.1
    depends_on:
      - kafka-zk
    ports:
      - "9092"
    environment:
      PORT_COMMAND: "docker port $$(head -2 /proc/self/cgroup | cut -d/ -f3 | sort -r | head -1) 9092/tcp | cut -d: -f2"
      KAFKA_ADVERTISED_LISTENERS: "EXTERNAL://localhost:_{PORT_COMMAND},INTERNAL://kafka:9093"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: kafka-zk:2181
      KAFKA_LISTENERS: EXTERNAL://:9092,INTERNAL://:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 10000012
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 10000
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "true"
      KAFKA_LEADER_IMBALANCE_CHECK_INTERVAL_SECONDS: 5
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      LOG4J_LOGGER_ORG: WARN,STDOUT
      LOG4J_LOGGER_ORG_APACHE_KAFKA: WARN,STDOUT
      LOG4J_LOGGER_KAFKA: WARN,STDOUT
      KAFKA_JVM_PERFORMANCE_OPTS: -server -Xms25m -Xmx512m -XX:+UseG1GC -Djava.awt.headless=true -XX:MaxMetaspaceExpansion=2M -XX:+TieredCompilation -XX:+HeapDumpOnOutOfMemoryError -XX:GCHeapFreeLimit=5 -XX:GCTimeLimit=90 -noverify -XX:ReservedCodeCacheSize=256m -Djava.security.egd=file:/dev/./urandom -Dcom.sun.xml.internal.bind.v2.runtime.JAXBContextImpl.fastBoot=true -XX:+AggressiveOpts -XX:+UseFastAccessorMethods -Dcom.sun.xml.internal.bind.v2.bytecode.ClassTailor.noOptimize=true -XX:SoftRefLRUPolicyMSPerMB=5 -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:+ExplicitGCInvokesConcurrentAndUnloadsClasses
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  mariadb:
    image: mariadb:10.4
    ports:
      - "3306"
    environment:
      MYSQL_DATABASE: tw-tasks-test
      MYSQL_ROOT_PASSWORD: example-password-change-me
    command: "mysqld --ssl=0
    --character-set-server=utf8mb4
    --innodb_flush_log_at_trx_commit=0
    --innodb_flush_method=O_DIRECT_NO_FSYNC
    --innodb_flush_neighbors=0
    --character-set-server=utf8mb4
    --collation-server=utf8mb4_unicode_ci
    --transaction-isolation=READ-COMMITTED
    --innodb_flush_log_at_trx_commit=1
    --innodb_autoinc_lock_mode=2
    --log_bin=1
    --binlog_format=ROW
    --sync_binlog=1
    "
  postgres:
    image: postgres:12
    ports:
      - 5432
    environment:
      POSTGRES_PASSWORD: example-password-change-me
